SET default_transaction_read_only = OFF;

-- SCHEMA inventory_archive
CREATE SCHEMA inventory_archive;
ALTER SCHEMA inventory_archive OWNER TO postgres;
COMMENT ON SCHEMA inventory_archive IS 'NIL';
GRANT USAGE ON SCHEMA inventory_archive TO anon, authenticated, service_role;
GRANT ALL ON ALL TABLES IN SCHEMA inventory_archive TO anon, authenticated, service_role;
GRANT ALL ON ALL ROUTINES IN SCHEMA inventory_archive TO anon, authenticated, service_role;
GRANT ALL ON ALL SEQUENCES IN SCHEMA inventory_archive TO anon, authenticated, service_role;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA inventory_archive GRANT ALL ON TABLES TO anon, authenticated, service_role;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA inventory_archive GRANT ALL ON ROUTINES TO anon, authenticated, service_role;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA inventory_archive GRANT ALL ON SEQUENCES TO anon, authenticated, service_role;


SET search_path TO inventory_archive;


-- SQL Dump of Nil.mdb
-- generated by MDB Viewer 7
-- optimized for PostgreSQL

SET NAMES 'UTF8';

DROP TABLE IF EXISTS "I_ven_";

CREATE TABLE "I_ven_" (
    "id" INTEGER PRIMARY KEY,
    "DateEdit" INTEGER,
    "DateCreat" INTEGER,
    "DeviceID" INTEGER,
    "UserRols" INTEGER,
    "Versen" TEXT,
    "OldId" INTEGER,
    "WGS84_X" DOUBLE PRECISION,
    "WGS84_Y" DOUBLE PRECISION,
    "center_position" public.GEOMETRY(Point, 4326),
    "ID" INTEGER,
    "Name" TEXT,
    "Mag" DOUBLE PRECISION,
    "ChDrav" DOUBLE PRECISION,
    "ChXOD" DOUBLE PRECISION,
    "WStart" TEXT,
    "WClos" TEXT,
    "X0" DOUBLE PRECISION,
    "Y0" DOUBLE PRECISION,
    "WGS84_X1" DOUBLE PRECISION,
    "WGS84_Y1" DOUBLE PRECISION,
    "ZonaM" INTEGER,
    "ZonaF" INTEGER,
    "X1" DOUBLE PRECISION,
    "Y1" DOUBLE PRECISION,
    "DistLe" DOUBLE PRECISION,
    "Zana" TEXT,
    "WHR" DOUBLE PRECISION,
    "Doctup" INTEGER REFERENCES lookup."Ivf_Doctup" ( "Id" ),
    "Status" INTEGER REFERENCES lookup."Ivf_Status" ( "Id" ),
    "God" INTEGER REFERENCES lookup."Ivf_God" ( "Id" ),
    "Obla" INTEGER REFERENCES lookup."Ivf_Obla" ( "Id" ),
    "Raion" INTEGER REFERENCES lookup."Ivf_Raion" ( "Id" ),
    "UserGrupa" INTEGER REFERENCES lookup."Ivf_UserGrupa" ( "Id" ),
    "User1" INTEGER REFERENCES lookup."Ivf_User1" ( "Id" ),
    "ComentObjekat" TEXT,
    "FotoObjekat" TEXT
);

DROP TABLE IF EXISTS "tree";

CREATE TABLE "tree" (
    "I_ven_id" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "number" INTEGER,
    "Uha_Id" INTEGER,
    "X" DOUBLE PRECISION,
    "Y" DOUBLE PRECISION,
    "center" public.GEOMETRY(Point, 4326),
    "Azimet" DOUBLE PRECISION,
    "Dastance" DOUBLE PRECISION,
    "GORDastance" DOUBLE PRECISION,
    "Uhil" DOUBLE PRECISION,
    "Tip_Der" INTEGER REFERENCES lookup."Ivf_Tip_Der" ( "Id" ),
    "Diametr_Der" DOUBLE PRECISION,
    "Okrugnost_Der" DOUBLE PRECISION,
    "Status_Der" INTEGER REFERENCES lookup."Ivf_Status_Der" ( "Id" ),
    "Poroda_Der" INTEGER REFERENCES lookup."Ivf_Poroda_Der" ( "Id" ),
    "DiloDrowa_Der" INTEGER REFERENCES lookup."Ivf_DiloDrowa_Der" ( "Id" ),
    "KlasKraft" INTEGER REFERENCES lookup."Ivf_KlasKraft" ( "Id" ),
    "Rozvilka" INTEGER REFERENCES lookup."Ivf_Rozvilka" ( "Id" ),
    "GiveSuche" INTEGER REFERENCES lookup."Ivf_GiveSuche" ( "Id" ),
    "SanStan" INTEGER REFERENCES lookup."Ivf_SanStan" ( "Id" ),
    "Pohkadgens" INTEGER REFERENCES lookup."Ivf_Pohkadgens" ( "Id" ),
    "Mitka" INTEGER REFERENCES lookup."Ivf_Mitka" ( "Id" ),
    "JarusDerevo" INTEGER REFERENCES lookup."Ivf_JarusDerevo" ( "Id" ),
    "Defoliacia" INTEGER REFERENCES lookup."Ivf_Defoliacia" ( "Id" ),
    "Dehromacia" INTEGER REFERENCES lookup."Ivf_Dehromacia" ( "Id" ),
    "Visota_Derevo" DOUBLE PRECISION,
    "PenPerimert_Derevo" DOUBLE PRECISION,
    "PenDaimert_Derevo" DOUBLE PRECISION,
    "Krona_Giva_Derevo" DOUBLE PRECISION,
    "Krona_Mertva_Derevo" DOUBLE PRECISION,
    "Vik_Tarif" INTEGER,
    "Kora_Tarif" DOUBLE PRECISION,
    "ZZ5_Tarif" DOUBLE PRECISION,
    "ZZ10_Tarif" DOUBLE PRECISION,
    "DerevoSYHEChinik" INTEGER REFERENCES lookup."Ivf_DerevoSYHEChinik" ( "Id" ),
    "DerevoSYHEStadia" INTEGER REFERENCES lookup."Ivf_DerevoSYHEStadia" ( "Id" ),
    "Krona_Prot_Derevo" DOUBLE PRECISION,
    "RozVusotModel" DOUBLE PRECISION,
    "Visota_Model" DOUBLE PRECISION,
    "Obem_Model" DOUBLE PRECISION,
    "Vna1ga" DOUBLE PRECISION,
    "Kna1ga" DOUBLE PRECISION,
    "Dna1ga" DOUBLE PRECISION,
    "Hna1ga" DOUBLE PRECISION,
    "Sna1ga" DOUBLE PRECISION,
    PRIMARY KEY ( "I_ven_id", "number" )
);


DROP TABLE IF EXISTS "tree_damage";

CREATE TABLE "tree_damage" (
    "Key1" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "Key2" INTEGER,
    "Key3" INTEGER,
    "Tip_DerPochk" INTEGER REFERENCES lookup."Ivf_Tip_DerPochk" ( "Id" ),
    "Bazis_DerPochk" INTEGER REFERENCES lookup."Ivf_Bazis_DerPochk" ( "Id" ),
    "Stupen_DerPochk" INTEGER REFERENCES lookup."Ivf_Stupen_DerPochk" ( "Id" ),
    "Prichina_DerPochk" INTEGER REFERENCES lookup."Ivf_Prichina_DerPochk" ( "Id" ),
    "Chinnik_DerPochk" INTEGER REFERENCES lookup."Ivf_Chinnik_DerPochk" ( "Id" ),
    "Chkidnik_DerPochk" INTEGER REFERENCES lookup."Ivf_Chkidnik_DerPochk" ( "Id" ),
    "Hvoroba_DerPochk" INTEGER REFERENCES lookup."Ivf_Hvoroba_DerPochk" ( "Id" ),
    PRIMARY KEY ( "Key1", "Key2", "Key3" )
);


DROP TABLE IF EXISTS "parent_material";

CREATE TABLE "parent_material" (
    "Key1" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "Key2" INTEGER,
    "Key3" INTEGER,
    "Id" INTEGER,
    "X" DOUBLE PRECISION,
    "Y" DOUBLE PRECISION,
    "Azimet" DOUBLE PRECISION,
    "Dastance" DOUBLE PRECISION,
    "GORDastance" DOUBLE PRECISION,
    "Uhil" DOUBLE PRECISION,
    PRIMARY KEY ( "Key1", "Key2", "Key3" )
);


DROP TABLE IF EXISTS "ground_profile";

CREATE TABLE "ground_profile" (
    "Key1" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "Key2" INTEGER,
    "Key3" INTEGER,
    "Nazva" INTEGER REFERENCES lookup."Ivf_Nazva" ( "Id" ),
    "Size1" DOUBLE PRECISION,
    PRIMARY KEY ( "Key1", "Key2", "Key3" )
);


DROP TABLE IF EXISTS "damage_intensity";

CREATE TABLE "damage_intensity" (
    "Key1" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "Key2" INTEGER,
    "ID" INTEGER,
    "Pocha" INTEGER,
    "GrupUgit" INTEGER REFERENCES lookup."Ivf_GrupUgit" ( "Id" ),
    "VidUgit" INTEGER REFERENCES lookup."Ivf_VidUgit" ( "Id" ),
    "KatZem" INTEGER REFERENCES lookup."Ivf_KatZem" ( "Id" ),
    "PoroGol" INTEGER REFERENCES lookup."Ivf_PoroGol" ( "Id" ),
    "PoroPerev" INTEGER REFERENCES lookup."Ivf_PoroPerev" ( "Id" ),
    "Bonitet" INTEGER REFERENCES lookup."Ivf_Bonitet" ( "Id" ),
    "TLY" INTEGER REFERENCES lookup."Ivf_TLY" ( "Id" ),
    "MezoR" INTEGER REFERENCES lookup."Ivf_MezoR" ( "Id" ),
    "MikroR" INTEGER REFERENCES lookup."Ivf_MikroR" ( "Id" ),
    "Ekspoz" INTEGER REFERENCES lookup."Ivf_Ekspoz" ( "Id" ),
    "Krutizna" INTEGER REFERENCES lookup."Ivf_Krutizna" ( "Id" ),
    "Pralis" INTEGER REFERENCES lookup."Ivf_Pralis" ( "Id" ),
    "VikStruktur" INTEGER REFERENCES lookup."Ivf_VikStruktur" ( "Id" ),
    "GospodarForma" INTEGER REFERENCES lookup."Ivf_GospodarForma" ( "Id" ),
    "GospodarPravo" INTEGER REFERENCES lookup."Ivf_GospodarPravo" ( "Id" ),
    "GospodarLg" INTEGER REFERENCES lookup."Ivf_GospodarLg" ( "Id" ), 
    "GospodarLi" INTEGER, -- Check Later
    "GospodarKw" TEXT,
    "GospodarVD" TEXT,
    "GeoMet" TEXT,
    "TipGruntuu" INTEGER REFERENCES lookup."Ivf_TipGruntuu" ( "Id" ),
    "Ogolenost" INTEGER REFERENCES lookup."Ivf_Ogolenost" ( "Id" ),
    "NameGrunt" INTEGER REFERENCES lookup."Ivf_NameGrunt" ( "Id" ),
    "ZmitestGoriz" INTEGER REFERENCES lookup."Ivf_ZmitestGoriz" ( "Id" ),
    "FormGumus" INTEGER REFERENCES lookup."Ivf_FormGumus" ( "Id" ),
    "Pohirena" INTEGER REFERENCES lookup."Ivf_Pohirena" ( "Id" ),
    "MechSklad" INTEGER REFERENCES lookup."Ivf_MechSklad" ( "Id" ),
    "Haruvatost" INTEGER REFERENCES lookup."Ivf_Haruvatost" ( "Id" ),
    "TipEroz" INTEGER REFERENCES lookup."Ivf_TipEroz" ( "Id" ),
    "Osuh" INTEGER REFERENCES lookup."Ivf_Osuh" ( "Id" ),
    "Area1" DOUBLE PRECISION,
    "Area2" DOUBLE PRECISION,
    "Area3" DOUBLE PRECISION,
    "Area4" DOUBLE PRECISION,
    "Koef" DOUBLE PRECISION,
    "ClasVik" INTEGER,
    "Povnota" DOUBLE PRECISION,
    "Zapas" DOUBLE PRECISION,
    "GPeret" DOUBLE PRECISION,
    "DzProb" DOUBLE PRECISION,
    "HzProb" DOUBLE PRECISION,
    "AzProb" DOUBLE PRECISION,
    "PovnotaVID" DOUBLE PRECISION,
    PRIMARY KEY ( "Key1", "Key2" )
);


DROP TABLE IF EXISTS "stand_layers";

CREATE TABLE "stand_layers" (
    "Key1" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "Key2" INTEGER,
    "Key3" INTEGER,
    "Jarus" INTEGER REFERENCES lookup."Ivf_Jarus" ( "Id" ),
    "Poroda" INTEGER REFERENCES lookup."Ivf_Poroda" ( "Id" ),
    "AbsolPovnot" INTEGER,
    "Vik" INTEGER,
    "Vosota" DOUBLE PRECISION,
    "Diametr" DOUBLE PRECISION,
    "Pochodgenna" INTEGER REFERENCES lookup."Ivf_Pochodgenna" ( "Id" ),
    "Kilkist" DOUBLE PRECISION,
    PRIMARY KEY ( "Key1", "Key2", "Key3" )
);


DROP TABLE IF EXISTS "deadwood";

CREATE TABLE "deadwood" (
    "Key1" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "Key2" INTEGER,
    "Id" INTEGER,
    "Uha_Id" INTEGER,
    "X1" DOUBLE PRECISION,
    "Y1" DOUBLE PRECISION,
    "Azimet1" DOUBLE PRECISION,
    "Dastance1" DOUBLE PRECISION,
    "GORDastance1" DOUBLE PRECISION,
    "Uhil1" DOUBLE PRECISION,
    "X2" DOUBLE PRECISION,
    "Y2" DOUBLE PRECISION,
    "Azimet2" DOUBLE PRECISION,
    "Dastance2" DOUBLE PRECISION,
    "GORDastance2" DOUBLE PRECISION,
    "Uhil2" DOUBLE PRECISION,
    "Tip_Laman" INTEGER REFERENCES lookup."Ivf_Tip_Laman" ( "Id" ),
    "Rozmechen_Laman" INTEGER REFERENCES lookup."Ivf_Rozmechen_Laman" ( "Id" ),
    "Poroda_Laman" INTEGER REFERENCES lookup."Ivf_Poroda_Laman" ( "Id" ),
    "Dlina_Laman" DOUBLE PRECISION,
    "Diam1_Laman" DOUBLE PRECISION,
    "Diam2_Laman" DOUBLE PRECISION,
    "StadGnil_Laman" INTEGER REFERENCES lookup."Ivf_StadGnil_Laman" ( "Id" ),
    PRIMARY KEY ( "Key1", "Key2" )
);


DROP TABLE IF EXISTS "marks";

CREATE TABLE "marks" (
    "Key1" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "Key2" INTEGER,
    "Id" INTEGER,
    "TipMitka" INTEGER REFERENCES lookup."Ivf_TipMitka" ( "Id" ),
    "TipGeometrija" INTEGER REFERENCES lookup."Ivf_TipGeometrija" ( "Id" ),
    "Coment" TEXT,
    PRIMARY KEY ( "Key1", "Key2" )
);


DROP TABLE IF EXISTS "rotten_stumps";

CREATE TABLE "rotten_stumps" (
    "Key1" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "Key2" INTEGER,
    "Key3" INTEGER,
    "Tip" INTEGER REFERENCES lookup."Ivf_Tip" ( "Id" ),
    "Pozmin" DOUBLE PRECISION,
    "Chstka" DOUBLE PRECISION,
    PRIMARY KEY ( "Key1", "Key2", "Key3" )
);


DROP TABLE IF EXISTS "understorey_presence";

CREATE TABLE "understorey_presence" (
    "Key1" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "Key2" INTEGER,
    "Key3" INTEGER,
    "PorodaPD" INTEGER REFERENCES lookup."Ivf_PorodaPD" ( "Id" ),
    "Chstka" INTEGER REFERENCES lookup."Ivf_Chstka" ( "Id" ),
    PRIMARY KEY ( "Key1", "Key2", "Key3" )
);


DROP TABLE IF EXISTS "stumps";

CREATE TABLE "stumps" (
    "Key1" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "Key2" INTEGER,
    "Id" INTEGER,
    "Uha_Id" INTEGER,
    "X" DOUBLE PRECISION,
    "Y" DOUBLE PRECISION,
    "Azimet" DOUBLE PRECISION,
    "Dastance" DOUBLE PRECISION,
    "GORDastance" DOUBLE PRECISION,
    "Uhil" DOUBLE PRECISION,
    "Diametr" DOUBLE PRECISION,
    "Poroda" INTEGER REFERENCES lookup."Ivf_Poroda" ( "Id" ),
    "Davnist" INTEGER REFERENCES lookup."Ivf_Davnist" ( "Id" ),
    "Gnil" INTEGER REFERENCES lookup."Ivf_Gnil" ( "Id" ),
    "PenUh" INTEGER REFERENCES lookup."Ivf_PenUh" ( "Id" ),
    "Kleimo" INTEGER REFERENCES lookup."Ivf_Kleimo" ( "Id" ),
    "Visota" DOUBLE PRECISION,
    "Vik" INTEGER,
    "Kora" DOUBLE PRECISION,
    PRIMARY KEY ( "Key1", "Key2" )
);


DROP TABLE IF EXISTS "regeneration_damage";

CREATE TABLE "regeneration_damage" (
    "Key1" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "Key2" INTEGER,
    "Key3" INTEGER,
    "Key4" INTEGER,
    "Id" INTEGER,
    "Tip_Ponovlena" INTEGER REFERENCES lookup."Ivf_Tip_Ponovlena" ( "Id" ),
    "Kilkist_Ponovlena_Pochkodg" INTEGER,
    "Davnist_Ponovlena_Pochkodg" INTEGER REFERENCES lookup."Ivf_Davnist_Ponovlena_Pochkodg" ( "Id" ),
    PRIMARY KEY ( "Key1", "Key2", "Key3", "Key4" )
);


DROP TABLE IF EXISTS "regeneration_type";

CREATE TABLE "regeneration_type" (
    "Key1" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "Key2" INTEGER,
    "Key3" INTEGER,
    "Id" INTEGER,
    "GrunVisot" INTEGER REFERENCES lookup."Ivf_GrunVisot" ( "Id" ),
    "Poroda_Ponovlena" INTEGER REFERENCES lookup."Ivf_Poroda_Ponovlena" ( "Id" ),
    "DiametrSer_Ponovlena" DOUBLE PRECISION,
    "Vik_Ponovlena" INTEGER,
    "Pochodgena_Ponovlena" INTEGER REFERENCES lookup."Ivf_Pochodgena_Ponovlena" ( "Id" ),
    "Kilkist_Ponovlena" INTEGER,
    "Pochkodgenna_Ponovlena" INTEGER REFERENCES lookup."Ivf_Pochkodgenna_Ponovlena" ( "Id" ),
    PRIMARY KEY ( "Key1", "Key2", "Key3" )
);


DROP TABLE IF EXISTS "regeneration_presence";

CREATE TABLE "regeneration_presence" (
    "Key1" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "Key2" INTEGER,
    "Id" INTEGER,
    "Najavnist" INTEGER REFERENCES lookup."Ivf_Najavnist" ( "Id" ),
    "Pozmachena" INTEGER REFERENCES lookup."Ivf_Pozmachena" ( "Id" ),
    "Primitka" TEXT,
    PRIMARY KEY ( "Key1", "Key2" )
);


DROP TABLE IF EXISTS "plants";

CREATE TABLE "plants" (
    "Key1" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "Key2" INTEGER,
    "Key3" INTEGER,
    "VidRos" INTEGER REFERENCES lookup."Ivf_VidRos" ( "Id" ),
    "ChsRos" INTEGER REFERENCES lookup."Ivf_ChsRos" ( "Id" ),
    "VidLia" INTEGER REFERENCES lookup."Ivf_VidLia" ( "Id" ),
    "ChsLia" INTEGER REFERENCES lookup."Ivf_ChsLia" ( "Id" ),
    PRIMARY KEY ( "Key1", "Key2", "Key3" )
);


DROP TABLE IF EXISTS "Sistem";

CREATE TABLE "Sistem" (
    "ID" INTEGER PRIMARY KEY
);


DROP TABLE IF EXISTS "impact";

CREATE TABLE "impact" (
    "Key1" INTEGER REFERENCES "I_ven_" ( "id" ) ON DELETE CASCADE,
    "Key2" INTEGER,
    "Key3" INTEGER,
    "Tip_Vpliv" INTEGER REFERENCES lookup."Ivf_Tip_Vpliv" ( "Id" ),
    "Vid_Vpliv" INTEGER REFERENCES lookup."Ivf_Vid_Vpliv" ( "Id" ),
    "Chastka_Vpliv" INTEGER REFERENCES lookup."Ivf_Chastka_Vpliv" ( "Id" ),
    PRIMARY KEY ( "Key1", "Key2", "Key3" )
);